@page "/components/timepicker"
@using MudBlazor

<MudGrid Gutter="Size.Medium">

    <!-- LEFT: examples -->
    <MudItem xs="12" md="8">
        <MudText Typo="Typo.subtitle1" Class="mb-2">Examples</MudText>

        <MudStack Spacing="3">

            <!-- 12-hour sample -->
            <MudTimePicker
                Label="12-hour sample"
                @bind-Time="_time1"
                Variant="Variant.Filled"
                Margin="@ComputedMargin"
                PickerIcon="@Icons.Material.Filled.Schedule"
                AmPm="@_amPm"
                Editable="@_editable"
                Disabled="@_disabled"
                ReadOnly="@_readonly"
                Clearable="@_clearable"
                AutoClose="@_autoClose"
                ShrinkLabel="@_shrinkLabel"
                HelperText="@(_helperText ? "Helper Text" : null)"
                HelperTextOnFocus="@_helperTextOnFocus" />

            <!-- 24-hour editable with error demo -->
            <MudTimePicker
                Label="24-hour editable"
                @bind-Time="_time2"
                Variant="Variant.Outlined"
                Margin="@ComputedMargin"
                PickerIcon="@Icons.Material.Filled.AccessTime"
                AmPm="false"
                Editable="@_editable"
                Disabled="@_disabled"
                ReadOnly="@_readonly"
                Clearable="@_clearable"
                AutoClose="@_autoClose"
                ShrinkLabel="@_shrinkLabel"
                HelperText="@(_helperText ? "Helper Text" : null)"
                HelperTextOnFocus="@_helperTextOnFocus"
                Error="@_hasError"
                ErrorText="Please pick a time" />

            <!-- With action buttons (Inline/Dialog/Static obeys controls on the right) -->
            <MudTimePicker
                @ref="_tpWithActions"
                Label="With action buttons"
                @bind-Time="_time3"
                Variant="Variant.Filled"
                Margin="@ComputedMargin"
                PickerIcon="@Icons.Material.Filled.MoreTime"
                PickerVariant="@_pickerVariant"
                Orientation="@_orientation"
                AmPm="@_amPm"
                Editable="@_editable"
                Disabled="@_disabled"
                ReadOnly="@_readonly"
                Clearable="@_clearable"
                AutoClose="@_autoClose"
                ShrinkLabel="@_shrinkLabel"
                HelperText="@(_helperText ? "Helper Text" : null)"
                HelperTextOnFocus="@_helperTextOnFocus">
                <PickerActions>
                    @if (_showActions)
                    {
                        <MudButton Class="mr-auto align-self-start"
                                   OnClick="async () => await _tpWithActions.ClearAsync()">Clear</MudButton>
                        <MudButton OnClick="async () => await _tpWithActions.CloseAsync(false)">Cancel</MudButton>
                        <MudButton Color="Color.Primary"
                                   OnClick="async () => await _tpWithActions.CloseAsync()">OK</MudButton>
                    }
                </PickerActions>
            </MudTimePicker>

        </MudStack>
    </MudItem>

    <!-- RIGHT: wrapped controls -->
    <MudItem xs="12" md="4">
        <MudText Typo="Typo.subtitle1" Class="mb-2">Controls</MudText>

        <MudPaper Class="pa-3">
            <MudStack Row Spacing="2" AlignItems="AlignItems.Center" Class="controls-stack">
                <MudSwitch Class="control-item" @bind-Value="_dense" Label="Dense" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_readonly" Label="ReadOnly" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_disabled" Label="Disabled" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_clearable" Label="Clearable" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_autoClose" Label="AutoClose" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_helperText" Label="HelperText" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_helperTextOnFocus" Label="HelperTextOnFocus" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_shrinkLabel" Label="ShrinkLabel" Color="Color.Primary" />
                <MudSwitch Class="control-item" @bind-Value="_amPm" Label="AM/PM (12h)" Color="Color.Secondary" />
                <MudSwitch Class="control-item" @bind-Value="_editable" Label="Editable" Color="Color.Secondary" />
                <MudSwitch Class="control-item" @bind-Value="_showActions" Label="Show Actions" Color="Color.Secondary" />
                <MudSwitch Class="control-item" @bind-Value="_hasError" Label="Show Error" Color="Color.Error" />
            </MudStack>

            <MudSelect T="Margin" @bind-Value="_margin" Label="Margin" Dense="true" Class="mt-3" Style="max-width:220px;">
                <MudSelectItem Value="Margin.None">None</MudSelectItem>
                <MudSelectItem Value="Margin.Dense">Dense</MudSelectItem>
                <MudSelectItem Value="Margin.Normal">Normal</MudSelectItem>
            </MudSelect>

            <MudSelect T="Orientation" @bind-Value="_orientation" Label="Orientation" Dense="true" Class="mt-3" Style="max-width:220px;">
                <MudSelectItem Value="Orientation.Portrait">Portrait</MudSelectItem>
                <MudSelectItem Value="Orientation.Landscape">Landscape</MudSelectItem>
            </MudSelect>

            <MudToggleGroup T="PickerVariant"
                            SelectionMode="SelectionMode.SingleSelection"
                            @bind-Value="_pickerVariant"
                            Color="Color.Primary"
                            CheckMark="true"
                            FixedContent="true"
                            Class="mt-3">
                <MudToggleItem Value="PickerVariant.Inline"  Text="Inline" />
                <MudToggleItem Value="PickerVariant.Dialog"  Text="Dialog" />
                <MudToggleItem Value="PickerVariant.Static"  Text="Static" />
            </MudToggleGroup>
        </MudPaper>
    </MudItem>
</MudGrid>

<!-- ===== Picker panel (bottom) ===== -->
<MudDivider Class="my-6" />
<MudText Typo="Typo.h6">Picker panel</MudText>

<MudGrid Gutter="Size.Medium" Class="mt-2">

    <MudItem md="8" Class="d-flex justify-center">
        <MudTimePicker
            @ref="_panelTimePicker"
            PickerVariant="@PanelVariant"
            @bind-Time="_panelTime"
            AutoClose="@PanelAutoClose"
            Orientation="@PanelOrientation"
            AmPm="@PanelAmPm"
            Variant="Variant.Outlined"
            Margin="Margin.Dense"
            Class="pa-2"
            PickerIcon="@Icons.Material.Filled.MoreTime">
            <PickerActions>
                @if (PanelShowActions)
                {
                    <MudButton Class="mr-auto align-self-start"
                               OnClick="async () => await _panelTimePicker.ClearAsync()">Clear</MudButton>
                    <MudButton OnClick="async () => await _panelTimePicker.CloseAsync(false)">Cancel</MudButton>
                    <MudButton Color="Color.Primary"
                               OnClick="async () => await _panelTimePicker.CloseAsync()">OK</MudButton>
                }
            </PickerActions>
        </MudTimePicker>
    </MudItem>

    <MudItem md="4">
        <MudPaper Height="460px" Class="px-4 pt-2 pb-4">
            <MudText Typo="Typo.h6">Options</MudText>

            <MudToggleGroup T="PickerVariant"
                            Value="@PanelVariant"
                            ValueChanged="@(v => PanelVariant = v)"
                            SelectionMode="SelectionMode.SingleSelection"
                            Color="Color.Primary"
                            CheckMark="true"
                            FixedContent="true"
                            Class="mb-3">
                <MudToggleItem Value="PickerVariant.Inline"  Text="INLINE" />
                <MudToggleItem Value="PickerVariant.Dialog"  Text="DIALOG" />
                <MudToggleItem Value="PickerVariant.Static"  Text="STATIC" />
            </MudToggleGroup>

            <MudCheckBox @bind-Value="PanelShowActions" Label="Show actions (Clear / Cancel / OK)" Color="Color.Primary" Dense="true" />
            <MudCheckBox @bind-Value="PanelAutoClose"   Label="Auto Close"                           Color="Color.Primary" Dense="true" />
            <MudCheckBox @bind-Value="PanelAmPm"        Label="AM/PM (12h)"                         Color="Color.Primary" Dense="true" />

            <MudSelect T="Orientation" @bind-Value="PanelOrientation" Label="Orientation"
                       Variant="Variant.Outlined" Dense="true" Margin="Margin.Dense" Class="mt-3">
                <MudSelectItem Value="Orientation.Portrait">Portrait</MudSelectItem>
                <MudSelectItem Value="Orientation.Landscape">Landscape</MudSelectItem>
            </MudSelect>

            <MudText Class="mt-3" Typo="Typo.caption">
                Selected: @( _panelTime is null ? "â€”" : _panelTime.Value.ToString(@"hh\:mm\:ss") )
            </MudText>
        </MudPaper>
    </MudItem>
</MudGrid>

<style>
  /* Wrap the switches nicely */
  .controls-stack { display:flex; flex-wrap: wrap; }
  .controls-stack .control-item { min-width: 160px; }
</style>

@code {
    // ===== Examples (left)
    private TimeSpan? _time1 = new(9, 0, 0);
    private TimeSpan? _time2 = new(14, 15, 0);
    private TimeSpan? _time3 = new(8, 0, 0);
    private MudTimePicker _tpWithActions = default!;

    // ===== Controls (right)
    private bool _dense;
    private bool _disabled;
    private bool _readonly;
    private bool _clearable = true;
    private bool _autoClose = true;
    private bool _helperText;
    private bool _helperTextOnFocus;
    private bool _shrinkLabel;
    private bool _amPm = true;
    private bool _editable = true;
    private bool _showActions = true;
    private bool _hasError;

    private Margin _margin = Margin.None;
    private Margin ComputedMargin => _dense ? Margin.Dense : _margin;

    private Orientation _orientation = Orientation.Portrait;
    private PickerVariant _pickerVariant = PickerVariant.Inline;

    // ===== Bottom panel
    private MudTimePicker _panelTimePicker = default!;
    private TimeSpan? _panelTime = new(10, 0, 0);

    public PickerVariant PanelVariant { get; set; } = PickerVariant.Static;
    public bool PanelShowActions { get; set; } = true;
    public bool PanelAutoClose   { get; set; } = true;
    public bool PanelAmPm        { get; set; } = true;
    public Orientation PanelOrientation { get; set; } = Orientation.Portrait;

    protected override void OnInitialized()
    {
        var now = DateTime.Now.TimeOfDay;   // current local time
        _time1 = now;
        _time2 = now;
        _time3 = now;
        _panelTime = now;
    }

}
