@page "/components/donutchart"

<MudPaper Class="doc-section-component-container">
    <MudChart ChartType="ChartType.Donut" Width="@_width" Height="@_height" @bind-SelectedIndex="Index" InputData="@data" InputLabels="@labels">
        <CustomGraphics>
            <text class="donut-inner-text" x="50%" y="35%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="20">Total</text>
            <text class="donut-inner-text" x="50%" y="50%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="50">@data.Sum().ToString()</text>
    </CustomGraphics>
    </MudChart>
</MudPaper>

<MudGrid>
    <MudItem xs="12" class="mt-4">
        <MudButton OnClick="AddDataSize" Variant="Variant.Filled" Color="Color.Primary">Add</MudButton>
        <MudButton @onclick="RandomizeData" Variant="Variant.Filled" Class="mx-4">Randomize</MudButton>
        <MudButton OnClick="RemoveDataSize" Variant="Variant.Filled" Color="Color.Secondary">Remove</MudButton> 
    </MudItem>

    <MudItem xs="12">
        <MudText Typo="Typo.body1">Selected portion of the chart: @Index</MudText>
    </MudItem>

    <MudItem md="6" xs="6">
        <MudTextField @bind-Value="_width" Label="Chart Width"></MudTextField>
        <MudTextField Class="mt-3" @bind-Value="_height" Label="Chart Height"></MudTextField>
    </MudItem>

    <MudItem md="3" xs="6">
        <MudSelect Label="Legend Position" Variant="Variant.Outlined" Dense="true" T="@Position" ValueChanged="OnSelectedValue" Class="mt-4">
            <MudSelectItem T="Position" Value="Position.Top">Top</MudSelectItem>
            <MudSelectItem T="Position" Value="Position.Left">Left</MudSelectItem>
            <MudSelectItem T="Position" Value="Position.Right">Right</MudSelectItem>
            <MudSelectItem T="Position" Value="Position.Bottom">Bottom</MudSelectItem>
            <MudSelectItem T="Position" Value="Position.Start">Start</MudSelectItem>
            <MudSelectItem T="Position" Value="Position.End">End</MudSelectItem>
        </MudSelect>
    </MudItem>
</MudGrid>

@code {
    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    int dataSize = 4;
    public double[] data = { 50, 25, 20, 5 };
    public string[] labels = { "Fossil", "Nuclear", "Solar", "Wind", "Oil", "Coal", "Gas", "Biomass",
                                "Hydro", "Geothermal", "Nuclear Fusion", "Pumped Storage", "Solar", "Wind", "Oil",
                                "Coal", "Gas", "Biomass", "Hydro", "Geothermal" };

    private string _width = "300px";
    private string _height = "300px";
    Random random = new Random();

    void RandomizeData()
    {
        var new_data = new double[dataSize];
        for (int i = 0; i < new_data.Length; i++)
            new_data[i] = random.NextDouble() * 100;
        data = new_data;
        StateHasChanged();
    }

    void AddDataSize()
    {
        if (dataSize < 20)
        {
            dataSize = dataSize + 1;
            RandomizeData();
        }
    }

    void RemoveDataSize()
    {
        if (dataSize > 0)
        {
            dataSize = dataSize - 1;
            RandomizeData();
        }
    }

    public Position LegendPosition { get; set; } = Position.Bottom;

    private void OnSelectedValue(Position value)
    {
        switch(value)
        {
            case Position.Top:
                LegendPosition = Position.Top;
                break;
            case Position.Left:
                LegendPosition = Position.Left;
                break;
            case Position.Right:
                LegendPosition = Position.Right;
                break;
            case Position.Bottom:
                LegendPosition = Position.Bottom;
                break;
            case Position.Start:
                LegendPosition = Position.Start;
                break;
            case Position.End:
                LegendPosition = Position.End;
                break;
        }
    }
}